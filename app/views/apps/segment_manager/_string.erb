
<% 
 f = locals[:f]
 segment = locals[:segment] 
 index = locals[:index]
%>

<%
  relative = segment.relative_options
%>

<div id="segment-index-<%=index%>">
	<div class="relative inline-block text-left">
		<div class="flex">
			<%= render Dropdown::Component.new(
				label: locals[:segment].value.blank? ? 'missing value' : "type in #{locals[:segment].value}", 
				variant: 'outlined', 
				size: 'sm') do %>
				
				<div data-controller="segment-manager-input">
					<div class="p-2">
						<h2 class="text-sm leading-5 text-gray-900 dark:text-gray-100 font-bold">
							select filter for type
						</h2>
					</div>

					<%= f.hidden_field :type %>
					<%= f.hidden_field :attribute %>
					<% # f.hidden_field :comparison %>

					<%= f.text_field :value, data: {"segment-manager-input-target": 'valueInput'} %>

					<% options = relative.map{|o| {o[:label] => o[:value]} }.reduce Hash.new, :merge %>

					<div class="mt-2 p-2 h-32 overflow-scroll">

						<%= f.collection_radio_buttons(:comparison, options, :last, :first) do |b| %>
							<div class="form-check form-check-inline">
								<%= b.radio_button class: 'form-check-input', 
									checked: locals[:segment]&.comparison == b&.value, 
									data: {
										"modal-target": "radio",
										"action": "click->segment-manager-input#tip",
										"attribute-type": locals[:segment].type
									} 
								%>
								<%= b.label class: 'form-check-label' %>
								<div class="input-placeholder"></div>
							</div>
						<% end %>

					</div>

					<div class="css-1d4ndkk">
						
						<%= f.submit "apply" %>

						<button type="button"
							data-segment="segment-index-<%=index%>"
							data-action="click->segment-manager#delete" >
							delete
						</button>

					</div>
				</div>

			<% end %>

		</div>
	</div>
</div>